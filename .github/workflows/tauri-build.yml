name: Tauri Build (Win/macOS/Linux)

on:
  workflow_dispatch: {}
  push:
    tags:
      - "v*.*.*"     # build on any semantic version tag

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            linux: true
          - os: windows-latest
          - os: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-reg-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Linux dependencies
        if: matrix.linux
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev
          sudo apt-get install -y \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install JS deps
        run: npm install

      - name: Tauri build
        uses: tauri-apps/tauri-action@v0
        with:
          args: --ci

      - name: Upload bundles
        uses: actions/upload-artifact@v4
        with:
          name: subvision-${{ runner.os }}-${{ github.ref_name }} # e.g. subvision-Windows-v1.0.0
          path: src-tauri/target/release/bundle/**/*
          if-no-files-found: error
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with: { path: dist-artifacts }
      - uses: softprops/action-gh-release@v2
        with:
          files: dist-artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}